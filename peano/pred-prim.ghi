# Primitive axioms for a formulation of the predicate calculus with
# a single type. The idea is that a very simple mechanical translation
# can add rwff assumptions so that proofs will verify in pax/tpred.

param (PROP prop.ghi () "")

kind (val)

tvar (wff ph ps ch)
tvar (val A B C)
var (val x y z)

term (wff (A. x ph))
term (wff (= A B))

stmt (alnfi ((ph x))
  ()
  (-> ph (A. x ph)))

stmt (gen ()
  (ph)
  (A. x ph))
# Margaris A4
stmt (ax-4 () () (-> (A. x ph) ph))

stmt (ax-alim () ()
  (-> (A. x (-> ph ps)) (-> (A. x ph) (A. x ps))))

stmt (ax-6 () () (-> (-. (A. x ph)) (A. x (-. (A. x ph)))))
stmt (ax-7 () () (-> (A. x (A. y ph)) (A. y (A. x ph))))
stmt (ax-tyex ((A x)) () (-. (A. x (-. (= x A)))))

# roughly Margaris A5, but without the subst
stmt (spec-var () ()
  (-> (A. x ph) ph))

stmt (eqid () ()
  (= A A))

stmt (eqcom () ()
  (<-> (= A B) (= B A)))

stmt (ax-eqtr () ()
  (-> (/\ (= A B) (= B C)) (= A C)))

